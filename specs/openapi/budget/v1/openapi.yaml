openapi: 3.0.3
info:
  title: FinSight Budget Service API
  description: Budget management and transaction categorization service with ML prediction
  version: 1.0.0
  
servers:
  - url: https://api.finsight.dev/budget
    description: Production server
  - url: http://localhost:8002/budget
    description: Development server

security:
  - BearerAuth: []

paths:
  /categories:
    get:
      summary: Get all spending categories
      tags: [Categories]
      parameters:
        - name: include_system
          in: query
          schema:
            type: boolean
            default: true
          description: Include system-defined categories
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      summary: Create custom spending category
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreate'
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Invalid category data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /categories/predict:
    post:
      summary: Predict transaction category using ML model
      tags: [ML Categorization]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionPredict'
      responses:
        '200':
          description: Category prediction successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPrediction'
        '400':
          description: Invalid transaction data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /categories/corrections:
    post:
      summary: Submit category correction for ML model improvement
      tags: [ML Categorization]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCorrection'
      responses:
        '200':
          description: Correction submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Correction submitted for model training"
                  model_retrain_scheduled:
                    type: boolean

  /budgets:
    get:
      summary: Get user budgets
      tags: [Budgets]
      parameters:
        - name: active_only
          in: query
          schema:
            type: boolean
            default: true
        - name: category_id
          in: query
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Budgets retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Budget'

    post:
      summary: Create new budget
      tags: [Budgets]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetCreate'
      responses:
        '201':
          description: Budget created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'
        '400':
          description: Invalid budget data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /budgets/{budget_id}:
    get:
      summary: Get budget by ID
      tags: [Budgets]
      parameters:
        - name: budget_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Budget retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetWithAnalytics'
        '404':
          description: Budget not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      summary: Update budget
      tags: [Budgets]
      parameters:
        - name: budget_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BudgetUpdate'
      responses:
        '200':
          description: Budget updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Budget'

    delete:
      summary: Delete budget
      tags: [Budgets]
      parameters:
        - name: budget_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Budget deleted successfully
        '404':
          description: Budget not found

  /budgets/{budget_id}/spending:
    get:
      summary: Get spending analysis for budget
      tags: [Analytics]
      parameters:
        - name: budget_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: period
          in: query
          schema:
            type: string
            enum: [current, previous, year_to_date]
            default: current
      responses:
        '200':
          description: Spending analysis retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendingAnalysis'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "Food & Dining"
        parent_category_id:
          type: string
          format: uuid
          nullable: true
        color:
          type: string
          pattern: "^#[A-Fa-f0-9]{6}$"
          example: "#FF6B6B"
        icon:
          type: string
          example: "restaurant"
        is_system_category:
          type: boolean
        created_at:
          type: string
          format: date-time

    CategoryCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        parent_category_id:
          type: string
          format: uuid
        color:
          type: string
          pattern: "^#[A-Fa-f0-9]{6}$"
        icon:
          type: string

    TransactionPredict:
      type: object
      required:
        - description
        - amount
      properties:
        description:
          type: string
          example: "STARBUCKS COFFEE #1234"
        amount:
          type: number
          format: decimal
          example: 4.75
        merchant_name:
          type: string
          example: "Starbucks"
        mcc_code:
          type: integer
          example: 5814
        transaction_date:
          type: string
          format: date

    CategoryPrediction:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
        category_name:
          type: string
          example: "Food & Dining"
        confidence_score:
          type: number
          format: decimal
          minimum: 0
          maximum: 1
          example: 0.89
        alternative_predictions:
          type: array
          items:
            type: object
            properties:
              category_id:
                type: string
                format: uuid
              category_name:
                type: string
              confidence_score:
                type: number
                format: decimal

    CategoryCorrection:
      type: object
      required:
        - transaction_data
        - correct_category_id
        - predicted_category_id
      properties:
        transaction_data:
          $ref: '#/components/schemas/TransactionPredict'
        correct_category_id:
          type: string
          format: uuid
        predicted_category_id:
          type: string
          format: uuid
        confidence_score:
          type: number
          format: decimal

    Budget:
      type: object
      properties:
        id:
          type: string
          format: uuid
        category_id:
          type: string
          format: uuid
        category_name:
          type: string
        limit_amount:
          type: number
          format: decimal
          example: 500.00
        period_type:
          type: string
          enum: [weekly, monthly, yearly]
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_active:
          type: boolean
        alert_threshold:
          type: number
          format: decimal
          minimum: 0
          maximum: 1
          example: 0.8
        created_at:
          type: string
          format: date-time

    BudgetCreate:
      type: object
      required:
        - category_id
        - limit_amount
        - period_type
        - start_date
      properties:
        category_id:
          type: string
          format: uuid
        limit_amount:
          type: number
          format: decimal
          minimum: 0.01
        period_type:
          type: string
          enum: [weekly, monthly, yearly]
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        alert_threshold:
          type: number
          format: decimal
          minimum: 0
          maximum: 1
          default: 0.8

    BudgetUpdate:
      type: object
      properties:
        limit_amount:
          type: number
          format: decimal
          minimum: 0.01
        end_date:
          type: string
          format: date
        is_active:
          type: boolean
        alert_threshold:
          type: number
          format: decimal
          minimum: 0
          maximum: 1

    BudgetWithAnalytics:
      allOf:
        - $ref: '#/components/schemas/Budget'
        - type: object
          properties:
            current_spent:
              type: number
              format: decimal
            remaining_amount:
              type: number
              format: decimal
            percentage_used:
              type: number
              format: decimal
            days_remaining:
              type: integer
            is_over_budget:
              type: boolean
            projected_overage:
              type: number
              format: decimal
              nullable: true

    SpendingAnalysis:
      type: object
      properties:
        budget_id:
          type: string
          format: uuid
        period:
          type: string
        total_spent:
          type: number
          format: decimal
        average_transaction:
          type: number
          format: decimal
        transaction_count:
          type: integer
        top_merchants:
          type: array
          items:
            type: object
            properties:
              merchant_name:
                type: string
              amount:
                type: number
                format: decimal
              transaction_count:
                type: integer
        daily_spending:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              amount:
                type: number
                format: decimal

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: object